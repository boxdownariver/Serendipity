#include <iostream>
#include <algorithm>
#include <string>
#include <cctype>
#include <cstdlib>
#include <iomanip>
#include <limits>
#include "headers/invmenu.h"
#include "headers/bookInfo.h"
using namespace std;

int findString (const string toSearch,const BookType array[], const int size);

int mainLookUp( const BookType booklist[], int &bookCount ) {
    string toSearch;
    int bookIndex;
    char choice = 'Y';  // Initialized so the loop executes for the first time

	if (bookCount == 0)
	{
		system ("clear");
		cout << "The book list is empty, no books available for search.\n";
		cout << "Press any key to continue\n";
		cin.ignore(numeric_limits<streamsize>::max(), '\n');
	}

	else {
		while (bookCount != 0 && toupper (choice) != 'N' )
	{
		system ("clear");
		cout << "         >>> BOOK LOOKUP <<<\n";
    	cout << "         Search : ";
    		getline (cin, toSearch);

    		bookIndex = findString (toSearch, booklist, bookCount );
    			if (bookIndex != -1)
    				{
        				//show the book details to user
					system("clear");
        				mainbookInfo ( booklist, bookIndex );       // Pass array and index to mainbookInfo
    				}
		cout << "Do you want to proceed another look up(Y/N)?\n";
		cin.get (choice);
		cin.ignore (100, '\n');
		
		while (toupper(choice) != 'N' && toupper(choice) != 'Y' )
			{
				cout << choice << " is invalid choice.. Only enter Y or N. ";
				cin.get (choice);
				cin.ignore (100, '\n');
			}
	}
	}
	
    return 0;
}

int findString (const string toSearch, const BookType array[], const int size)
{
    int index = 0;
    string tempTitle;
    string searchUpper;
    char choice;

    // make the search string all uppercase
    searchUpper = toSearch;
    transform (searchUpper.begin (), searchUpper.end(), searchUpper.begin (), :: toupper);
    cout << "╔════════════════════════════════════════════════════════════════════════════════════════════════════╗\n"; 
    cout << "║                                                                                                    ║\n";
     while (index < size)
         {
             // make each array uppercase based on the index
             tempTitle = array[index].bookTitle; transform (tempTitle.begin (), tempTitle.end(), tempTitle.begin (), :: 
             toupper);

             // Look up for the string name or isbn
             if (tempTitle.find(searchUpper) != string::npos || array[index].isbn.find (toSearch)!= string::npos)
             {
                 cout << "║ RESULT -> : Title - " << setw (78) << left << array[index].bookTitle << " ║\n";
                 cout << "║ " << setw (98) << left << "Is this the book you intended to search for? (Y/N) : " << " ║" ;
                 cin.get (choice);
	        		  cin.ignore (100, '\n');
					  cout << "\n║                                                                                                    ║\n";
                 while (toupper(choice) != 'N' && toupper(choice) != 'Y' )
			        {
				        cout << "║ " << choice << setw (97) << " is invalid choice.. Only enter Y or N " << " ║ ";
				        cin.get (choice);
				        cin.ignore (100, '\n');
2
2
1
Star Wars
2
0-3452-6079-1
3
George Lucas
4
Del Rey
5
10/18/2017
6
5
7
59.95
8
100.00
9
y1
The Empire Strikes Back (Star Wars)
2
0-3452-9209-X
3
George Lucas
4
Ballantine
5
04/01/2017
6
2
7
179.58
8
185.00
9
y1
Splinter of the Mind's Eye (Star Wars)
2
0-3453-2023-9
3
George Lucas
4
Del Rey
5
11/08/2017
6
4
7
24.00
8
26.50
9
y1
Return of the Jedi (Star Wars)
2
0-3453-0767-4
3
George Lucas
4
Del Rey
5
10/09/2017
6
4
7
2.94
8
6.50
9
y1
Heir to the Empire (Star Wars: The Thrawn Trilogy, Vol. 1)
2
0-5532-9612-4
3
Timothy Zahn
4
Bantam
5
11/01/2017
6
10
7
25.38
8
27.00
9
y1
Dark Force Rising (Star Wars: The Thrawn Trilogy, Vol. 2
2
0-5535-6071-9
3
Timothy Zahn
4
Bantam
5
11/08/2017
6
10
7
25.38
8
27.00
9
y1
The Last Command (Star Wars: The Thrawn Trilogy)
2
0-5535-6492-7
3
Timothy Zahn
4
Bantam
5
11/02/2017
6
10
7
14.30
8
17
9
y1
Specter of the Past (Star Wars: The Hand of Thrawn #1)
2
0-5532-9804-6
3
Timothy Zahn
4
Bantam
5
11/08/2017
6
5
7
13.66
8
15
9
y1
Vision of the Future (Star Wars: The Hand of Thrawn, Book 2)
2
0-5535-7879-0
3
Timothy Zahn
4
Bantam
5
11/06/2017
6
5
7
10.85
8
15
9
y1
Battlestar Galactica
2
1-8528-6088-X
3
Glen A.;Thurston, Robert Larson
4
Titan Books
5
11/08/2015
6
5
7
102.04
8
150.00
9
y1
New Battlestar Galactica Volume 1 (Battlestar Galactica (Dynamite)) (v. 1)
2
1-9333-0533-9
3
Diamond Comic Distributors Inc.
4
Dynamite Entertainment
5
11/08/2017
6
5
7
29.95
8
35.00
9
y1
New Battlestar Galactica Volume II Hardcover (Battlestar Galactica (Dynamite))
2
1-9333-0553-3
3
Greg Pak
4
Dynamite Entertainment
5
11/03/2017
6
5
7
34.95
8
37.00
9
y1
The Hobbit
2
0-6189-6863-6
3
J.R.R. Tolkien
4
Houghton Mifflin Harcourt
5
11/10/2017
6
1
7
17.61
8
20.00
9
y1
The Lord of the Rings: 50th Anniversary, One Vol. Edition
2
0-6186-4561-6
3
J.R.R. Tolkien
4
Houghton Mifflin Harcourt
5
11/10/2017
6
4
7
29.89
8
32.00
9
y1
The Two Towers
2
0-3954-8933-4
3
J.R.R. Tolkien
4
Houghton Mifflin Harcourt
5
11/10/2017
6
4
7
17.89
8
19.00
9
y1
The Return of the King
2
0-3954-8930-X
3
J.R.R. Tolkien
4
Houghton Mifflin Harcourt
5
11/10/2017
6
6
7
16.89
8
19.00
9
y1
The Fellowship of the Ring
2
0-3954-8931-8
3
J.R.R. Tolkien
4
Houghton Mifflin Harcourt
5
11/10/2017
6
7
7
18.70
8
20.00
9
y1
C++ Programming: From Problem Analysis to Program Design 7th Edition
2
1-2858-5274-5
3
D.S. Malik
4
Course Technology
5
11/16/2017
6
3
7
85.67
8
110.55
9
y1
Digital Computer Electronics
2
0-0746-2235-8
3
Malvino
4
Mc Graw Hill India
5
11/16/2017
6
10
7
44.56
8
50.00
9
y1
Assembly Language for x86 Processors (7th Edition)
2
0-1337-6940-2
3
Irvin, K.R.
4
Pearson
5
11/16/2017
6
10
7
178.22
8
200
9
y0
			        }    
                if (toupper (choice) == 'Y' )
                return index;

             }
             
             index++;
         }
    cout << "Reached end of the book list. No book found..\n";
    return -1;
}
